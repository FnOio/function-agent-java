stages:
  - lint
  - unittests
  - deploy

include:
  # Make sure the CHANGELOG is always updated. Not strictly necessary, but very good practice
  - project: 'rml/util/ci-templates'
    ref: main
    file: 'CHANGELOG.gitlab-ci.yml'
  # Script to publish to Maven Central
  - project: 'rml/util/ci-templates'
    ref: main
    file: 'Maven-Central.gitlab-ci.yml'

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "-s $CI_PROJECT_DIR/.m2/settings.xml --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  key: ${CI_JOB_NAME}
  paths:
    - .m2/repository

# This will build and run tests.
.test: &test
  stage: unittests
  script:
    - 'mvn $MAVEN_CLI_OPTS test'
  except:
    - main
    - development

# Test using JDK17
test:jdk17:
  <<: *test
  image: maven:3-eclipse-temurin-17-alpine # Java 17 is the latest LTS at the moment
