@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno:     <https://w3id.org/function/ontology#> .
@prefix fnoi:    <https://w3id.org/function/vocabulary/implementation#> .
@prefix fnom:    <https://w3id.org/function/vocabulary/mapping#> .
@prefix ex:      <http://example.org/> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xs:      <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

#############
# FUNCTIONS #
#############

ex:sum a fno:Function ;
  fno:name "Sum of two integers" ;
  rdfs:label "Sum of two integers" ;
  dcterms:description "Returns the sum of two given integers" ;
  fno:expects ( ex:int1 ex:int2 ) ;
  fno:returns ( ex:intOut ) .

ex:rawListLen a fno:Function ;
  fno:name "length of a raw list" ;
  rdfs:label "length of a raw list" ;
  dcterms:description "Returns the length of a raw list, i.e. without parameterized type" ;
  fno:expects ( ex:rawList ) ;
  fno:returns ( ex:intOut ) .

ex:multiply a fno:Function;
    fno:name "Product of two integers";
    rdfs:label "Product of two integers";
    dcterms:description "Returns the product of two given integers";
    fno:expects (ex:int1 ex:int2);
    fno:returns (ex:intOut).

ex:pow a fno:Function ;
    fno:name "power of 2 numbers";
    rdfs:label "power of 2 numbers";
    dcterms:description "returns the power of the 2 arguments";
    fno:expects (ex:int1 ex:int2) ;
    fno:returns (ex:intOut).

ex:writeToFile a fno:Function ;
    fno:name "write to file";
    rdfs:label "writes argument to file";
    dcterms:description "returns 0 if success, writes argument to file";
    fno:expects (ex:int1 ex:string );
    fno:returns ( ex:int2).

#####################
# FUNCTION MAPPINGS #
#####################

ex:sumMapping a fno:Mapping ;
  fno:function ex:sum ;
  fno:implementation ex:internalTestFunctions ;
  fno:methodMapping [ a fnom:StringMethodMapping ; fnom:method-name "sum" ] .

ex:rawListLenMapping a fno:Mapping ;
  fno:function ex:rawListLen ;
  fno:implementation ex:internalTestFunctions ;
  fno:methodMapping [ a fnom:StringMethodMapping ; fnom:method-name "rawListLen" ] .

ex:multiplyMapping a fno:Mapping;
    fno:function ex:multiply;
    fno:implementation ex:internalTestFunctions;
    fno:methodMapping [ a fnom:StringMethodMapping; fnom:method-name "multiply" ] .

ex:powMapping a fno:Mapping;
    fno:function ex:pow;
    fno:implementation ex:internalTestFunctions;
    fno:methodMapping [ a fnom:StringMethodMapping; fnom:method-name "pow" ] .

ex:writeMapping a fno:Mapping;
    fno:function ex:writeToFile;
    fno:implementation ex:internalTestFunctions;
    fno:methodMapping [a fnom:StringMethodMapping; fnom:method-name "writeToFile" ].

##############
# PARAMETERS #
##############

ex:int1 a fno:Parameter ;
    fno:name "integer 1" ;
    rdfs:label "integer 1" ;
    fno:predicate ex:p_int1 ;
    fno:type xs:integer ;
    fno:required "true"^^xs:boolean .

ex:int2 a fno:Parameter ;
    fno:name "integer 2" ;
    rdfs:label "integer 2" ;
    fno:predicate ex:p_int2 ;
    fno:type xs:integer ;
    fno:required "true"^^xs:boolean .

ex:rawList a fno:Parameter ;
    fno:name "a raw list" ;
    rdfs:label "a raw list" ;
    fno:predicate ex:p_rawList ;
    fno:type rdf:List ;
    fno:required "true"^^xs:boolean .

ex:string a fno:Parameter;
    fno:name "string parameter";
    rdfs:label "a string parameter";
    fno:predicate ex:p_string;
    fno:type xs:string;
    fno:required "true"^^xs:boolean.

###########
# OUTPUTS #
###########

ex:intOut a fno:Output ;
    fno:name "integer output" ;
    rdfs:label "integer output" ;
    fno:predicate ex:o_int ;
    fno:type xs:integer .

###########
# CLASSES #
###########

ex:internalTestFunctions a fnoi:JavaClass ;
  fnoi:class-name "be.ugent.idlab.knows.functions.internalfunctions.InternalTestFunctions" .
